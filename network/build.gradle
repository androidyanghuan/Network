apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    task makeJar(type:Copy){
        delete 'build/Network_V1.0.jar' //删除之前的旧jar包
        from('build/intermediates/aar_main_jar/release/') //从这个目录下取出默认jar包
        into('build/') //将jar包输出到指定目录下
        include('classes.jar')
        rename('classes.jar', 'Network_V1.0.jar') //自定义jar包的名字
    }
    makeJar.dependsOn(build)
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3LoggingInterceptor"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$converterGsonVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$adapterRxjava2Version"

}